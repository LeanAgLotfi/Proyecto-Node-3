paths:
  /api/products:
    get:
      tags:
        - Products
      summary: Get Products from DB
      responses:
        "200":
          description: Product successfully in DB
        "404":
          description: Product Not Found in DB
        "500":
          description: Internal Server Error
    post:
      tags:
        - Products
      summary: Send Products from DB
      responses:
        "200":
          description: Product successfully in DB
        "500":
          description: Internal Server Error
  /api/products/{productsId}:
    get:
      tags:
        - Products
      summary: Get Product from DB
      responses:
        "200":
          description: Product successfully in DB
        "404":
          description: Product Not Found in DB
        "500":
          description: Internal Server Error
    put:
      tags:
        - Products
      summary: Get products from DB
      responses:
        "200":
          description: Product successfully in DB
        "500":
          description: Internal Server Error
    delete:
      tags:
        - Products
      summary: Delete Products from DB
      responses:
        "200":
          description: Product successfully in DB
        "404":
          description: Product Not Found in DB
        "500":
          description: Internal Server Error
components:
  schemas:
    Products:
      type: object
      properties:
          _id:
              type: ObjectId
              description: Autogenerated id from DB
          title:
              type: string 
              description: Title product from DB
          description:
              type: string
              description: Description product from DB
          code:
              type: number
              description: code of product from DB
          price:
              type: number
              description: Price product from DB
          stock:
              type: number
              description: Stock from DB
          category:
              type: string
              description: Category Product from DB
          status:
            type: string
            enum: [success, error]
            description: Status Product
      example:
          _id: ObjectId(123abc456)
          title: 'Zapatos'
          description: 'zapatos de hombre marca acme'
          code: 1244
          price: 300
          stock: 15
          category: 'Calzado'
          status: 'success'
